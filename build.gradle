buildscript {
	repositories {
		maven { url = 'https://files.minecraftforge.net/maven' }
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
	}
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'
apply plugin: 'maven-publish'


version = minecraft_version + "-" + mod_version
group = mod_group
archivesBaseName = mod_name

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
	mappings channel: mappings_channel, version: mappings_version
	//accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

	runs {
		client {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'debug'
			mods {
				exppipes {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'debug'
			mods {
				exppipes {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'debug'
			args '--mod', 'rfllib', '--all', '--output', file('src/generated/resources/')
			mods {
				exppipes {
					source sourceSets.main
				}
			}
		}
	}
}



repositories {
	maven {
		name = "cil.li"
		url = "http://maven.cil.li/"
	}
	maven {
		name = "Forestry & IC2"
		url = "http://maven.ic2.player.to"
	}
	maven {
		name = "MCMP"
		url = "http://maven.amadornes.com/"
	}
	maven {
		name = "Progwm16 maven (JEI)"
		url = "https://dvs1.progwml6.com/files/maven/"
	}
	//maven {
	//	name = "ModMaven (fallback)"
	//	url = "https://modmaven.k-4u.nl"
	//}
	maven {
		name = "CurseForge"
		url = "https://minecraft.curseforge.com/api/maven/"
	}
}

repositories {
	maven { url = "http://dvs1.progwml6.com/files/maven" } //JEI
	maven { url = "http://maven.tterrag.com" } //TOP
	maven { url = "https://maven.blamejared.com" } //Craft Tweaker
	maven { url = "https://maven.theillusivec4.top" } //Curios
}

dependencies {
	compileOnly fg.deobf("mezz.jei:jei-1.15.2:6.0.0.2:api")
	runtimeOnly fg.deobf("mezz.jei:jei-1.15.2:6.0.0.2")
	minecraft 'net.minecraftforge:forge:' + minecraft_version + '-' + forge_version
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
	manifest {
		attributes([
				'FMLAT'                   : 'accesstransformer.cfg',
				"Specification-Title"     : mod_name,
				"Specification-Vendor"    : mod_group,
				"Specification-Version"   : mod_version,
				"Implementation-Title"    : project.name,
				"Implementation-Version"  : mod_version,
				"Implementation-Vendor"   : mod_group,
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

jar.finalizedBy('reobfJar')

task apiJar(type: Jar, dependsOn: 'classes') {
	classifier = 'api'
	from(sourceSets.main.output) {
		include 'ihamfp/brewteamlib/api/**'
	}
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task deobfJar(type:Jar) {
	from sourceSets.main.output
	classifier 'deobf'
}

artifacts {
	archives jar
	archives sourcesJar
	archives deobfJar
	archives apiJar
}
publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId = mod_group
			artifactId = project.archivesBaseName
			version = mod_version
			artifact jar
			artifact sourcesJar
			artifact deobfJar
			artifact apiJar
		}
	}
	repositories {
		maven {
			credentials {
				username project.hasProperty('maven_username') ? project.property('maven_username') : ''
				password project.hasProperty('maven_password') ? project.property('maven_password') : ''
			}
			url "https://maven.gscottsingleton.com/repository/mcrfl/"
		}
	}
}
